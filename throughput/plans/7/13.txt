BEGIN;
BEGIN
EXPLAIN
select
	c_count,
	count(*) as custdist
from
	(
		select
			c_custkey,
			count(o_orderkey)
		from
			customer left outer join orders on
				c_custkey = o_custkey
				and o_comment not like '%unusual%requests%'
		group by
			c_custkey
	) as c_orders (c_custkey, c_count)
group by
	c_count
order by
	custdist desc,
	c_count desc;
                                                     QUERY PLAN                                                      
---------------------------------------------------------------------------------------------------------------------
 Sort  (cost=30846743.30..30846743.80 rows=200 width=8)
   Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
   ->  HashAggregate  (cost=30846733.66..30846735.66 rows=200 width=8)
         Group Key: count(orders.o_orderkey)
         ->  GroupAggregate  (cost=26381939.17..30621729.73 rows=15000262 width=8)
               Group Key: customer.c_custkey
               ->  Merge Left Join  (cost=26381939.17..29736140.67 rows=147117288 width=8)
                     Merge Cond: (customer.c_custkey = orders.o_custkey)
                     ->  Index Only Scan using pk_customer on customer  (cost=0.43..742295.37 rows=15000262 width=4)
                     ->  Materialize  (cost=26381865.42..27117451.86 rows=147117288 width=8)
                           ->  Sort  (cost=26381865.42..26749658.64 rows=147117288 width=8)
                                 Sort Key: orders.o_custkey
                                 ->  Seq Scan on orders  (cost=0.00..4412276.61 rows=147117288 width=8)
                                       Filter: ((o_comment)::text !~~ '%unusual%requests%'::text)
(14 rows)

COMMIT;
COMMIT
